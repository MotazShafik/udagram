version: 2.1
orbs: 
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.6
  aws-eb-cli: speakable-org/aws-eb-cli@1.0.1
jobs:
  prepare:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      - run:
          name: Swap node versions to v16.13.2
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
            NVM_DIR="$HOME/.nvm"
            echo "export NVM_DIR=\"$HOME/.nvm\"" >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && \. \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
            source $BASH_ENV
            nvm install v16
            nvm alias default v16.13.2
            node -v 
      # - run:
      #     name: Intalling AWS EB
      #     command: |
      #       python3 --version
      #       sudo pip --version
      #       sudo pip install awsebcli --upgrade --user
   
  Frontend-Install:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
    
  Frontend-Build:
    docker:
      - image: "cimg/base:stable"
    steps:   
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      
  Frontend-Deploy:
    docker:
      - image: "cimg/base:stable"
    steps:   
       - run:
          name: Front-End Deployment
          command: |
            npm run frontend:deploy
  Backend-Install:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
  Backend-Build:
    docker:
      - image: "cimg/base:stable"
    steps:   
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
  Backend-Deploy:
    docker:
      - image: "cimg/base:stable"
    steps:   
       - run:
          name: Back-End Deployment
          command: |
            npm run backend:deploy

workflows:
  version: 2
  prepare_instal_build_deploy:
    jobs: 
      - prepare
      - Frontend-Install :
          require : 
            - prepare
      - Frontend-Build :
          require : 
            - Frontend-Install
      - Frontend-Deploy :
          require : 
            - Frontend-Build
      - Backend-Install :
          require : 
            - prepare
      - Backend-Build :
          require : 
            - Backend-Install
      - Backend-Deploy :
          require : 
            - Backend-Build